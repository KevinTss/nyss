trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
- task: CacheBeta@1
  inputs:
    key: 'nuget | "$(Agent.OS)" | **/*.csproj'
    restoreKeys: |
       nuget | "$(Agent.OS)"
       nuget
    path: $(NUGET_PACKAGES)
  displayName: Cache NuGet packages

- task: CacheBeta@1
  inputs:
    key: 'npm | "$(Agent.OS)" | src/RX.Nyss.Web/ClientApp/package-lock.json'
    restoreKeys: |
       npm | "$(Agent.OS)"
       npm
    path: $(npm_config_cache)
  displayName: Cache npm

- task: CmdLine@2
  displayName: 'Install gitversion'
  inputs:
    script: 'dotnet tool install --global GitVersion.Tool --version 5.1.3-beta1.2'

- task: PowerShell@2
  displayName: 'GitVersion'
  inputs:
    targetType: 'inline'
    script: 'dotnet gitversion /l console /output buildserver /updateAssemblyInfo'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: test
    projects: 'RX.Nyss.sln'
    arguments: '/p:NoNpmInstall=true /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude="[RX.Nyss.Web.Views]*%2c[RX.Nyss.Data]*%2c[RX.Nyss.Web]RX.Nyss.Web.Data.*%2c[RX.Nyss.Web]*Dto.*%2c[RX.Nyss.Web]RX.Nyss.Web.Configuration.*%2c[RX.Nyss.Web]RX.Nyss.Web.Migrations.*%2c[RX.Nyss.Web]RX.Nyss.Web.Utils.Logging.*%2c[RX.Nyss.Web]RX.Nyss.Web.Startup%2c[RX.Nyss.Web]RX.Nyss.Web.Program%2c[RX.Nyss.Web]RX.Nyss.Web.Pages.ErrorModel"'

- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
  displayName: ReportGenerator
  inputs:
    reports: '$(Build.SourcesDirectory)/tests/**/coverage.cobertura.xml'
    targetdir: '$(Build.SourcesDirectory)/CodeCoverage'
    reporttypes: 'Cobertura'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: 'Build RX.Nyss.Web and RX.Nyss.Data.MigrationApp'
  inputs:
    command: 'build'
    projects: |
      src/RX.Nyss.Web/RX.Nyss.Web.csproj
      src/RX.Nyss.Data.MigrationApp/RX.Nyss.Data.MigrationApp.csproj
    arguments: '-c Release -r win-x86 "/p:Version=$(GitVersion.MajorMinorPatch)"'

- task: DotNetCoreCLI@2          
  displayName: 'Publish RX.Nyss.Web'
  inputs:
    command: publish
    publishWebProjects: false
    arguments: 'src/RX.Nyss.Web/RX.Nyss.Web.csproj -c Release -r win-x86 --self-contained --no-build /p:PublishReadyToRun=true -o "$(Build.ArtifactStagingDirectory)/webapp"'
    zipAfterPublish: true
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: 'Publish RX.Nyss.FuncApp'
  inputs:
    command: publish
    publishWebProjects: false
    arguments: 'src/RX.Nyss.FuncApp/RX.Nyss.FuncApp.csproj -c Release -o "$(Build.ArtifactStagingDirectory)/funcapp" /p:Version=$(GitVersion.MajorMinorPatch)'
    zipAfterPublish: true
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: 'Publish RX.Nyss.Data.MigrationApp'
  inputs:
    command: publish
    publishWebProjects: false
    arguments: 'src/RX.Nyss.Data.MigrationApp/RX.Nyss.Data.MigrationApp.csproj -c Release -r win-x86 --self-contained --no-build -o "$(Build.ArtifactStagingDirectory)/migrationapp"'
    zipAfterPublish: false
    modifyOutputPath: false

- task: CopyFiles@2
  inputs:
    SourceFolder: 'Infrastructure'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Infrastructure'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
